{"ast":null,"code":"var _jsxFileName = \"E:\\\\Work\\\\Projects\\\\MY\\\\3.MERN-StudentManagement\\\\frontend\\\\src\\\\componenets\\\\CounterFunction.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\n\n//dont have render in functions\n//dont have constructors in functions\n//so we have react hooks(to define the state in a function)\n//dont have to bind ;) \n//so functional is more easy\n//import above {useState}\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CounterFunction() {\n  _s();\n  let [number, setNumberr] = useState(0);\n  function increment() {\n    setNumberr(++number);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Functional componenet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\" Counter=\", number]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: e => increment,\n      children: \" Increment \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n}\n_s(CounterFunction, \"HVosp4OuLI24RXfv3lGPO0ElXnE=\");\n_c = CounterFunction;\nexport default CounterFunction;\nvar _c;\n$RefreshReg$(_c, \"CounterFunction\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CounterFunction","_s","number","setNumberr","increment","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","e","_c","$RefreshReg$"],"sources":["E:/Work/Projects/MY/3.MERN-StudentManagement/frontend/src/componenets/CounterFunction.js"],"sourcesContent":["import React,{ useState } from \"react\";\r\n\r\n//dont have render in functions\r\n//dont have constructors in functions\r\n//so we have react hooks(to define the state in a function)\r\n//dont have to bind ;) \r\n//so functional is more easy\r\n//import above {useState}\r\nfunction CounterFunction(){\r\n\r\n    let [number,setNumberr]=useState(0)\r\n\r\n    function increment(){\r\n        setNumberr(++number)\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <h3>Functional componenet</h3>\r\n            <h1> Counter={number}</h1>\r\n            <button onClick={e=> increment}> Increment </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CounterFunction;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAQ,OAAO;;AAEtC;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,eAAeA,CAAA,EAAE;EAAAC,EAAA;EAEtB,IAAI,CAACC,MAAM,EAACC,UAAU,CAAC,GAACN,QAAQ,CAAC,CAAC,CAAC;EAEnC,SAASO,SAASA,CAAA,EAAE;IAChBD,UAAU,CAAC,EAAED,MAAM,CAAC;EACxB;EAEA,oBACIH,OAAA;IAAAM,QAAA,gBACIN,OAAA;MAAAM,QAAA,EAAI;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eAC9BV,OAAA;MAAAM,QAAA,GAAI,WAAS,EAACH,MAAM;IAAA;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eAC1BV,OAAA;MAAQW,OAAO,EAAEC,CAAC,IAAGP,SAAU;MAAAC,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAClD;AAEd;AAACR,EAAA,CAfQD,eAAe;AAAAY,EAAA,GAAfZ,eAAe;AAiBxB,eAAeA,eAAe;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}